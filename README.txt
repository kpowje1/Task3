Server.py - отвечает за работу сервера
client.py - клиентская программа для передачи данных на сервер и получения ответа

При запуске client.py необходимо указать порт как аргумент, пример:
python3 /Task3/client.py 8000

Это и будет решать к какому порту подключается пользователь.

При подключении по 8000 пользователю необходимо ввести идентификатор самостоятельно какой он пожелает
В ответ сервер вернёт код, которые потребуется для разрешения записи в файл сообщения, если совпадёт комбинация
код = идентификатор.

При подключении по 8001 необходимо ввести идентификатор, который вводили при подключении по 8000, затем указать
соответствующий код и третьим шагом указать сообщение. Если код соответствует тому, что возвращал сервер при
подключении к 8000 - сообщение будет записано в лог.

---------------------
Сервер запускается с двумя потоками на каждый порт, сделал так, чтобы распараллелить ожидание подключения.
Если сделать последовательно, то соединение по 8001 не пойдёт, пока не будет выполнено соединение по 8000

Реализовал проверку сопоставление код == идентификатор через кодирование идентификатора который ввёл пользователь
при подключении к 8000 порту - msg = base64.b64encode(data) и отправки этого значения пользователю как кода.
Таким образом не нужно записывать в файл идентификатор: код, так как нам достаточно кодировать в base64 код, что прислал
пользователь при подключении к 8001 и мы должны получить идентификатор.

